"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_capacitor-community_native-audio_dist_esm_web_js"],{

/***/ 359:
/*!********************************************************************************!*\
  !*** ./node_modules/@capacitor-community/native-audio/dist/esm/audio-asset.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AudioAsset": () => (/* binding */ AudioAsset)
/* harmony export */ });
class AudioAsset {
  constructor(audio) {
    this.audio = audio;
  }

}

/***/ }),

/***/ 6927:
/*!************************************************************************!*\
  !*** ./node_modules/@capacitor-community/native-audio/dist/esm/web.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NativeAudio": () => (/* binding */ NativeAudio),
/* harmony export */   "NativeAudioWeb": () => (/* binding */ NativeAudioWeb)
/* harmony export */ });
/* harmony import */ var _home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @capacitor/core */ 5099);
/* harmony import */ var _audio_asset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio-asset */ 359);



class NativeAudioWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_1__.WebPlugin {
  constructor() {
    super({
      name: 'NativeAudio',
      platforms: ['web']
    });
  }

  resume(options) {
    var _this = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this.getAudioAsset(options.assetId).audio;

      if (audio.paused) {
        return audio.play();
      }
    })();
  }

  pause(options) {
    var _this2 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this2.getAudioAsset(options.assetId).audio;

      return audio.pause();
    })();
  }

  getCurrentTime(options) {
    var _this3 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this3.getAudioAsset(options.assetId).audio;

      return {
        currentTime: audio.currentTime
      };
    })();
  }

  getDuration(options) {
    var _this4 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this4.getAudioAsset(options.assetId).audio;

      if (Number.isNaN(audio.duration)) {
        throw 'no duration available';
      }

      if (!Number.isFinite(audio.duration)) {
        throw 'duration not available => media resource is streaming';
      }

      return {
        duration: audio.duration
      };
    })();
  }

  configure(options) {
    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      throw `configure is not supported for web: ${JSON.stringify(options)}`;
    })();
  }

  preload(options) {
    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(options.assetId)) {
        throw 'AssetId already exists. Unload first if like to change!';
      }

      if (!((_a = options.assetPath) === null || _a === void 0 ? void 0 : _a.length)) {
        throw 'no assetPath provided';
      }

      if (!options.isUrl && !new RegExp('^/?' + NativeAudioWeb.FILE_LOCATION).test(options.assetPath)) {
        const slashPrefix = options.assetPath.startsWith('/') ? '' : '/';
        options.assetPath = `${NativeAudioWeb.FILE_LOCATION}${slashPrefix}${options.assetPath}`;
      }

      const audio = new Audio(options.assetPath);
      audio.autoplay = false;
      audio.loop = false;
      audio.preload = 'auto';

      if (options.volume) {
        audio.volume = options.volume;
      }

      NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.set(options.assetId, new _audio_asset__WEBPACK_IMPORTED_MODULE_2__.AudioAsset(audio));
    })();
  }

  play(options) {
    var _this5 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      const audio = _this5.getAudioAsset(options.assetId).audio;

      yield _this5.stop(options);
      audio.loop = false;
      audio.currentTime = (_a = options.time) !== null && _a !== void 0 ? _a : 0;
      return audio.play();
    })();
  }

  loop(options) {
    var _this6 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this6.getAudioAsset(options.assetId).audio;

      yield _this6.stop(options);
      audio.loop = true;
      return audio.play();
    })();
  }

  stop(options) {
    var _this7 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this7.getAudioAsset(options.assetId).audio;

      audio.pause();
      audio.loop = false;
      audio.currentTime = 0;
    })();
  }

  unload(options) {
    var _this8 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _this8.stop(options);
      NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.delete(options.assetId);
    })();
  }

  setVolume(options) {
    var _this9 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (typeof (options === null || options === void 0 ? void 0 : options.volume) !== 'number') {
        throw 'no volume provided';
      }

      const audio = _this9.getAudioAsset(options.assetId).audio;

      audio.volume = options.volume;
    })();
  }

  isPlaying(options) {
    var _this10 = this;

    return (0,_home_olivierb_Developments_iabsis_hcw_patient_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const audio = _this10.getAudioAsset(options.assetId).audio;

      return {
        isPlaying: !audio.paused
      };
    })();
  }

  getAudioAsset(assetId) {
    this.checkAssetId(assetId);

    if (!NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(assetId)) {
      throw `no asset for assetId "${assetId}" available. Call preload first!`;
    }

    return NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.get(assetId);
  }

  checkAssetId(assetId) {
    if (typeof assetId !== 'string') {
      throw 'assetId must be a string';
    }

    if (!(assetId === null || assetId === void 0 ? void 0 : assetId.length)) {
      throw 'no assetId provided';
    }
  }

}
NativeAudioWeb.FILE_LOCATION = 'assets/sounds';
NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID = new Map();
const NativeAudio = new NativeAudioWeb();


/***/ })

}]);
//# sourceMappingURL=node_modules_capacitor-community_native-audio_dist_esm_web_js.js.map