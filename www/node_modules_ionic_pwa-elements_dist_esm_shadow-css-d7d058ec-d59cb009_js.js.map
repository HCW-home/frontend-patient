{"version":3,"file":"node_modules_ionic_pwa-elements_dist_esm_shadow-css-d7d058ec-d59cb009_js.js","mappings":"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","sources":["./node_modules/@ionic/pwa-elements/dist/esm/shadow-css-d7d058ec-d59cb009.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nconst safeSelector = (selector) => {\n    const placeholders = [];\n    let index = 0;\n    let content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    const ss = {\n        content,\n        placeholders,\n    };\n    return ss;\n};\nconst restoreSafeSelector = (placeholders, content) => {\n    return content.replace(/__ph-(\\d+)__/g, (_, index) => placeholders[+index]);\n};\nconst _polyfillHost = '-shadowcsshost';\nconst _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nconst _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonSlottedRe = /::slotted/gim;\nconst _colonHostContextRe = /:host-context/gim;\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nconst stripComments = (input) => {\n    return input.replace(_commentRe, '');\n};\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nconst extractCommentsWithHash = (input) => {\n    return input.match(_commentWithHashRe) || [];\n};\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\nconst processRules = (input, ruleCallback) => {\n    const inputWithEscapedBlocks = escapeBlocks(input);\n    let nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, (...m) => {\n        const selector = m[2];\n        let content = '';\n        let suffix = m[4];\n        let contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        const cssRule = {\n            selector,\n            content\n        };\n        const rule = ruleCallback(cssRule);\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n};\nconst escapeBlocks = (input) => {\n    const inputParts = input.split(_curlyRe);\n    const resultParts = [];\n    const escapedBlocks = [];\n    let bracketCount = 0;\n    let currentBlockParts = [];\n    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        const part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    const strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nconst insertPolyfillHostInCssText = (selector) => {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nconst convertColonRule = (cssText, regExp, partReplacer) => {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, (...m) => {\n        if (m[2]) {\n            const parts = m[2].split(',');\n            const r = [];\n            for (let i = 0; i < parts.length; i++) {\n                const p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nconst colonHostPartReplacer = (host, part, suffix) => {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nconst convertColonHost = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nconst colonHostContextPartReplacer = (host, part, suffix) => {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nconst convertColonSlotted = (cssText, slotScopeId) => {\n    const slotClass = '.' + slotScopeId + ' > ';\n    const selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, (...m) => {\n        if (m[2]) {\n            const compound = m[2].trim();\n            const suffix = m[3];\n            const slottedSelector = slotClass + compound + suffix;\n            let prefixSelector = '';\n            for (let i = m[4] - 1; i >= 0; i--) {\n                const char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            const orgSelector = prefixSelector + slottedSelector;\n            const addedSelector = `${prefixSelector.trimRight()}${slottedSelector.trim()}`;\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                const updatedSelector = `${addedSelector}, ${orgSelector}`;\n                selectors.push({\n                    orgSelector,\n                    updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors,\n        cssText\n    };\n};\nconst convertColonHostContext = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nconst convertShadowDOMSelectors = (cssText) => {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n};\nconst makeScopeMatcher = (scopeSelector) => {\n    const lre = /\\[/g;\n    const rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nconst selectorNeedsScoping = (selector, scopeSelector) => {\n    const re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nconst applySimpleSelectorScope = (selector, scopeSelector, hostSelector) => {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        const replaceBy = `.${hostSelector}`;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, (_, selector) => {\n            return selector.replace(/([^:]*)(:*)(.*)/, (_, before, colon, after) => {\n                return before + replaceBy + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nconst applyStrictSelectorScope = (selector, scopeSelector, hostSelector) => {\n    const isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n    const className = '.' + scopeSelector;\n    const _scopeSelectorPart = (p) => {\n        let scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            const t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                const matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    const safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    let scopedSelector = '';\n    let startIndex = 0;\n    let res;\n    const sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    let shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        const separator = res[1];\n        const part = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n        scopedSelector += `${scopedPart} ${separator} `;\n        startIndex = sep.lastIndex;\n    }\n    const part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nconst scopeSelector = (selector, scopeSelectorText, hostSelector, slotSelector) => {\n    return selector.split(',')\n        .map(shallowPart => {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nconst scopeSelectors = (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) => {\n    return processRules(cssText, (rule) => {\n        let selector = rule.selector;\n        let content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        const cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content\n        };\n        return cssRule;\n    });\n};\nconst scopeCssText = (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) => {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    const slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nconst scopeCss = (cssText, scopeId, commentOriginalSelector) => {\n    const hostScopeId = scopeId + '-h';\n    const slotScopeId = scopeId + '-s';\n    const commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    const orgSelectors = [];\n    if (commentOriginalSelector) {\n        const processCommentedSelector = (rule) => {\n            const placeholder = `/*!@___${orgSelectors.length}___*/`;\n            const comment = `/*!@${rule.selector}*/`;\n            orgSelectors.push({ placeholder, comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, rule => {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    const scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = [scoped.cssText, ...commentsWithHash].join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(({ placeholder, comment }) => {\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(slottedSelector => {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\n\nexport { scopeCss };\n"],"names":["safeSelector","selector","placeholders","index","content","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","suffix","contentPrefix","startsWith","blocks","substring","length","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","r","i","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","lastIndex","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","slottedSelectors","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector","placeholder","comment","scoped","forEach"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}