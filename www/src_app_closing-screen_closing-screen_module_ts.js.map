{"version":3,"file":"src_app_closing-screen_closing-screen_module_ts.js","mappings":"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","sources":["./src/app/closing-screen/closing-screen.module.ts","./src/app/closing-screen/closing-screen.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n// translate\nimport { I18nModule } from '../i18n/i18n.module';\n\nimport { ClosingScreenPage } from './closing-screen.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClosingScreenPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    I18nModule\n  ],\n  declarations: [ClosingScreenPage]\n})\nexport class ClosingScreenPageModule {}\n","import { AuthService } from \"./../auth/auth.service\";\nimport { Component, OnInit, Directive  } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ConsultationService } from \"../consultation.service\";\nimport { ConfigService } from \"../config.service\";\nimport { Platform } from \"@ionic/angular\";\nimport { environment } from \"../../environments/environment\";\nimport { App } from '@capacitor/app';\n\n\ndeclare let cordova: any;\n\n\n@Component({\n  selector: \"app-closing-screen\",\n  templateUrl: \"./closing-screen.page.html\",\n  styleUrls: [\"./closing-screen.page.scss\"],\n})\nexport class ClosingScreenPage implements OnInit {\n  // The ID of the consultation that just has been closed\n  private consultationId;\n\n  // Whether or not the feedback has been submitted (i.e. the request is ongoing)\n  public feedbackSubmitted: boolean = false;\n\n  // Whether or not the feedback form has been saved\n  public feedbackSaved: boolean = false;\n\n  // The current rating selected by the user () or null if none selected\n  public userRating: string = null;\n\n  // The feedback comment written by the user\n  public userComment: string = \"\";\n\n  // The list of rating values\n  public ratings: string[] = [\"good\", \"ok\", \"bad\"];\n\n  currentUser;\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private consultationService: ConsultationService,\n    private authService: AuthService,\n    public configService: ConfigService,\n    public platform: Platform\n  ) {}\n\n  ngOnInit() {\n    this.currentUser = this.authService.currentUserValue;\n    // Get the consultation ID from the route\n    this.consultationId = this.activeRoute.snapshot.params.id;\n  }\n\n  /**\n   * Event fired when the user clicks on one of the ratings\n   * @param rating The clicked rating\n   */\n  onRatingClick(rating) {\n    if (rating === this.userRating) {\n      this.userRating = null;\n    } else if (this.ratings.indexOf(rating) !== -1) {\n      this.userRating = rating;\n    }\n  }\n\n  closeApp() {\n    console.log('hello');\n    \n    localStorage.clear();\n    App.exitApp();\n  }\n\n  /**\n   * Check if the user is running on mobile (either web or native app).\n   */\n  isMobileUser() {\n    return this.platform.is(\"ios\") || this.platform.is(\"android\");\n  }\n\n  /**\n   * Check if the user is running an installed app.\n   */\n\n  isNativeApp() {\n    return this.platform.is(\"ios\") || this.platform.is(\"android\");\n  }\n\n  /**\n   * Event fired when the user submits the feedback form\n   */\n  onFormSubmit() {\n\n\n    if (this.feedbackSubmitted || !this.userRating == null) {\n      return;\n    }\n    this.feedbackSubmitted = true;\n    this.consultationService\n      .saveConsultationFeedback(\n        this.consultationId,\n        this.userRating,\n        this.userComment\n      )\n      .subscribe(\n        (res) => {\n          this.feedbackSaved = true;\n        },\n        (err) => {\n          this.feedbackSubmitted = false;\n        }\n      );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}